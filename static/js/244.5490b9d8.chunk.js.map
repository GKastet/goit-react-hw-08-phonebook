{"version":3,"file":"static/js/244.5490b9d8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.jsx","components/Contacts/ContactsStyled.js","components/ContactItem/ContactItemStyled.js","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.jsx","components/Filter/FilterStyled.js","components/Filter/Filter.jsx","components/SectionStyled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  label{\n    display: flex;\n    flex-direction: column;\n  }\n\n  input{\n    padding: 10px 15px;\n    cursor: pointer;\n    border-radius: 8px;\n  }\n\n  button{\n    width: 100px;\n    padding: 10px;\n    border-radius: 8px;\n    cursor: pointer;\n    background-color: lightyellow;\n    transition: background-color 250ms linear;\n    &:hover{\n        background-color: yellow;\n    }\n  }\n`\n","import PropTypes from 'prop-types';\nimport { ContactFormStyled } from './ContactFormStyled';\nimport { useState } from 'react';\n\nfunction ContactForm({ formAddContact }) {\n  const [nameContact, setNameContact] = useState('');\n  const [number, setNumber] = useState('');\n  \n\n  const handleOnChange = evt => {\n    const { name, value } = evt.currentTarget;\n    if (name === 'name') {\n      setNameContact(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleOnSubmit = evt => {\n    evt.preventDefault();\n    formAddContact({ name: nameContact, number });\n    reset();\n  };\n\n  const reset = () => {\n    setNameContact('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <ContactFormStyled onSubmit={handleOnSubmit}>\n        <label>\n          <span>Name</span>\n          <input\n            value={nameContact}\n            type=\"text\"\n            name=\"name\"            \n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleOnChange}\n          />\n        </label>\n        <label>\n          <span>Number</span>\n          <input\n            value={number}\n            type=\"tel\"\n            name=\"number\"            \n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleOnChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </ContactFormStyled>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  formAddContact: PropTypes.func.isRequired,  \n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsDivStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding-top: 20px;\n`\n\n","import styled from 'styled-components';\n\nexport const ContactDivStyled = styled.div`\n    display: flex;\n    gap: 20px;\np{\n    margin:0;\n    padding: 0;\n    font-size: 18px;\n\n}\n\n    button{\n        margin: 0;\n        padding: 0 4px;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 16px;\n    }\n`","import PropTypes from 'prop-types';\nimport { ContactDivStyled } from './ContactItemStyled'\n\n\nconst ContactItem = ({id, name, number, onRemoveContact})=>{\n    return(\n        <ContactDivStyled key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button type='button' onClick={()=>onRemoveContact(id)}>Delete</button>\n          </ContactDivStyled>\n    )\n}\n\nContactItem.propTypes={\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onRemoveContact: PropTypes.func.isRequired\n}\n\nexport default ContactItem","import PropTypes from 'prop-types';\nimport { ContactsDivStyled } from './ContactsStyled';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nfunction Contacts({ filteredContact, onRemoveContact }) {\n  \n  return (\n    <>\n      <ContactsDivStyled>\n        {filteredContact.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onRemoveContact={onRemoveContact}\n            />\n          );\n          \n        })}\n      </ContactsDivStyled>\n    </>\n  );\n}\n\nContacts.propTypes = {\n  filteredContact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,  \n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const InputStyled = styled.input`\n    padding: 10px 15px;\n    cursor: pointer;\n    border-radius: 8px;\n`","import PropTypes from 'prop-types';\nimport { InputStyled } from './FilterStyled';\n\nconst Filter = ({ value, handleOnChangeFilter }) => {\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <InputStyled\n       type=\"text\"\n       value={value}\n       onChange={handleOnChangeFilter} />\n    </>\n  );\n};\n\nFilter.propTypes = {  \n  handleOnChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 400px;\n  margin: 50px auto 0;\n  display: flex;\n  flex-direction: column;\n`;\n","//import withAuthRedirect from 'HOC/withAuthRedirect';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport { Section } from 'components/SectionStyled';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/Slices/contactsSlice';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  fetchContactThunk,\n} from 'redux/Thunks/contactsThunk';\nimport {\n  selectContacts,\n  selectError,\n  selectFiltered,\n  selectIsLoading,\n} from 'redux/selectors';\n\nexport const ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filtered = useSelector(selectFiltered);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactThunk());\n  }, [dispatch]);\n\n  const formAddContact = contactData => {\n    const finded = contacts.find(contact => contact.name === contactData.name);\n    if (finded) {\n      alert(`${contactData.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContactThunk(contactData));\n  };\n\n  const handleOnChangeFilter = evt => {\n    dispatch(filterContact(evt.currentTarget.value));\n  };\n\n  const filteredContact = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filtered.toLowerCase())\n  );\n\n  return (\n    <Section>\n      <h1>Phonebook</h1>\n      <ContactForm formAddContact={formAddContact} contactsArr={contacts} />\n      <h2>Contacts</h2>\n      <Filter value={filtered} handleOnChangeFilter={handleOnChangeFilter} />\n      {isLoading && <Loader />}\n      {error && <>Oops... Error: {error}</>}\n      <Contacts\n        filteredContact={filteredContact}\n        onRemoveContact={contactId => {\n          dispatch(deleteContactThunk(contactId));\n        }}\n        value={filtered}\n        handleOnChangeFilter={handleOnChangeFilter}\n      />\n    </Section>\n  );\n};\n\n//export default withAuthRedirect(ContactsPage);\nexport default ContactsPage;\n"],"names":["ContactFormStyled","styled","_templateObject","_taggedTemplateLiteral","_ref","formAddContact","_useState","useState","_useState2","_slicedToArray","nameContact","setNameContact","_useState3","_useState4","number","setNumber","handleOnChange","evt","_evt$currentTarget","currentTarget","name","value","reset","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","type","pattern","title","required","onChange","ContactsDivStyled","ContactDivStyled","id","onRemoveContact","onClick","filteredContact","map","_ref2","ContactItem","InputStyled","handleOnChangeFilter","Section","ContactsPage","contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","filtered","selectFiltered","dispatch","useDispatch","useEffect","fetchContactThunk","filterContact","filter","contact","toLowerCase","includes","ContactForm","contactData","find","alert","concat","addContactThunk","contactsArr","Filter","Loader","Contacts","contactId","deleteContactThunk"],"sourceRoot":""}